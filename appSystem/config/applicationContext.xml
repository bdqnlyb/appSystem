<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  		xmlns:p="http://www.springframework.org/schema/p"
  		xmlns:context="http://www.springframework.org/schema/context"
  		xmlns:aop="http://www.springframework.org/schema/aop"
  		xmlns:tx="http://www.springframework.org/schema/tx"
  		xmlns:mvc="http://www.springframework.org/schema/mvc"
  		xsi:schemaLocation="http://www.springframework.org/schema/beans
      	http://www.springframework.org/schema/beans/spring-beans.xsd
      	http://www.springframework.org/schema/context
      	http://www.springframework.org/schema/context/spring-context.xsd
       	http://www.springframework.org/schema/tx
      	http://www.springframework.org/schema/tx/spring-tx.xsd
      	http://www.springframework.org/schema/mvc
      	http://www.springframework.org/schema/mvc/spring-mvc.xsd
      	http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
		
		<!-- 引入外部文件properties文件 -->
		<context:property-placeholder location="classpath:db.properties"/>
		<!-- 配置dpcp连接池的数据源 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="${driverClass}"/>
			<property name="url" value="${url}"/>
			<property name="username" value="${user}"/>
			<property name="password" value="${password}"/>
			<property name="initialSize" value="30"/>
			<property name="maxActive" value="150"/>
			<property name="maxIdle" value="30"/>
			<property name="minIdle" value="5"/>
			<property name="maxWait" value="1000"/>
		</bean>
		<!-- 配制会话工厂 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<!--mybatis-config.xml文件的位置-->
			<property name="configLocation" value="classpath:mybatis-config.xml"/>			
		</bean>
		
		<!-- 配制数据映射器 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="dao"/>
		</bean>
		
		<!-- 配置事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		
		<!-- 声明使用注解式事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		<!-- AOP 利用组件扫描，将切面组件纳入Spring容器。虽然可以通过编程的方式织入切面，
		但是一般情况下，我们还是使用spring的配置自动完成创建代理织入切面的工作-->
		<aop:aspectj-autoproxy/> 
		
		<!-- 加入SpringMVC的配置文件 -->
		<context:component-scan base-package="service,controller"/>
		
		<!-- 处理静态资源 -->
		<mvc:default-servlet-handler/>
		<!-- 配置开启注解驱动 -->
		<mvc:annotation-driven>
			<!-- 修改消息转换器的默认字符编码 -->
			<mvc:message-converters>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="defaultCharset" value="utf-8"></property>
				</bean>
			</mvc:message-converters>
		</mvc:annotation-driven>
		
		
		<!-- 配置视图解析器：如何把handler方法返回值解析为实际的物理视图 -->
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix" value="/"></property>
			<property name="suffix" value=".jsp"></property>
		</bean>
</beans>